call(addFit(nruns = 50, n = 100, ngens = 18, startT = 1997, simCol = "gray40", rescale = True))
Pop1 <- simPop(Popsize = 100, nGenerations = 15)
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
#dim() =#columns and #of rows
#nrow() =#of rows in the data set.
#x axis is from 1998-2013.
#ylim(allele freq between 0-1 on ylim)
#rgb=color choices
#overallFreq=10,000 or more alleles frequencies.
#alleleFreqs=freq. of each allele in the overall population(freq.)but also, the difference in frequency between the overall population.
#each allele freq. over time
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
??alleleFreqs
#each allele's rescaled freq.(observed-initial freq.)over time.
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x- x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(alleleFreqs$year, alleleFreqs$rfeq, colramp = Pal, nbin=100)
#smoothScatter() plot is a complete summary of how likely a given change in allele freq. is over a given period of time in this population. Smooth scatter plot.
#nbin=changing this function makes it smotther or more pixelated.
#simPop to stimulate popualtions
smoothScatter(alleleFreqs$year, alleleFreqs$rfreq, colramp = Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
call(addFit(nruns = 50, n = 100, ngens = 18, startT = 1997, simCol = "gray40", rescale = True))
Pop1 <- simPop(Popsize = 100, nGenerations = 15)
#dim() =#columns and #of rows
#nrow() =#of rows in the data set.
#x axis is from 1998-2013.
#ylim(allele freq between 0-1 on ylim)
#rgb=color choices
#overallFreq=10,000 or more alleles frequencies.
#alleleFreqs=freq. of each allele in the overall population(freq.)but also, the difference in frequency between the overall population.
#each allele freq. over time
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
??alleleFreqs
#each allele's rescaled freq.(observed-initial freq.)over time.
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x- x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(alleleFreqs$year, alleleFreqs$rfeq, colramp = Pal, nbin=100)
#smoothScatter() plot is a complete summary of how likely a given change in allele freq. is over a given period of time in this population. Smooth scatter plot.
#nbin=changing this function makes it smotther or more pixelated.
#simPop to stimulate popualtions
smoothScatter(alleleFreqs$year, alleleFreqs$rfreq, colramp = Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
call(addFit(nruns = 50, n = 100, ngens = 18, startT = 1997, simCol = "gray40", rescale = True))
Pop1 <- simPop(Popsize = 100, nGenerations = 15)
#Find the combination of n, h, and s for addFit() that matches empirical data(that produces changes comparable to what is seen in the scrub jay population).
#n:
#h:
#s:
#My Review of Task_05 simPop
#source("http://jonsmitchell.com/code/fxn05.R")
#Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h = 1, s = 0)
#plot(1: nrow(Pop1), Pop1[,1], ylim =c(0, 1), type = "l", xlab="generation", ylab ="allele freq.", lwd=2)
#lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
#legend("topleft", legend = c ("a", "b"), col = c("black", "red"), lwd=2, bty="n")
#plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
#dim() =#columns and #of rows
#nrow() =#of rows in the data set.
#x axis is from 1998-2013.
#ylim(allele freq between 0-1 on ylim)
#rgb=color choices
#overallFreq=10,000 or more alleles frequencies.
#alleleFreqs=freq. of each allele in the overall population(freq.)but also, the difference in frequency between the overall population.
#each allele freq. over time
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
??alleleFreqs
#each allele's rescaled freq.(observed-initial freq.)over time.
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x- x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(alleleFreqs$year, alleleFreqs$rfeq, colramp = Pal, nbin=100)
#smoothScatter() plot is a complete summary of how likely a given change in allele freq. is over a given period of time in this population. Smooth scatter plot.
#nbin=changing this function makes it smotther or more pixelated.
#simPop to stimulate popualtions
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(alleleFreqs$year, alleleFreqs$dfeq, colramp = Pal, nbin=100)
#smoothScatter() plot is a complete summary of how likely a given change in allele freq. is over a given period of time in this population. Smooth scatter plot.
#nbin=changing this function makes it smotther or more pixelated.
head(alleleFreqs)
smoothScatter(alleleFreqs$year, alleleFreqs$d_freq, colramp = Pal, nbin=100, xlab="year", ylab="change in allele freq. since 1998")
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(alleleFreqs$year, alleleFreqs$d_freq, colramp = Pal, nbin=100)
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(0, 1))
s <- apply(overallFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x- x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
smoothScatter(alleleFreqs$year, alleleFreqs$d_freq, colramp = Pal, nbin=100)
addFit(nruns = 50, n = 100, ngens = 18, startT = 1997, simCol = "gray40", rescale = TRUE)
rm(ls=list())
rm(list=ls())
addFit
source("http://jonsmitchell.com/code/reformatData07.R")
source("http://jonsmitchell.com/code/simFxn.R")
#dim() =#columns and #of rows
str(rescaleFreq)
source("http://jonsmitchell.com/code/simFxn.R")
source("http://jonsmitchell.com/code/reformatData07.R")
head(alleleFreqs)
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(alleleFreqs$year, alleleFreqs$d_freq, colramp = Pal, nbin=100)
#smoothScatter() plot is a complete summary of how likely a given change in allele freq. is over a given period of time in this population. Smooth scatter plot.
tail(alleleFreqs)
dOver[1:5,1:5]
Rescale_Year <- c()
Rescale_Alleles <- c()
for (i in 3:ncol(dOver)){
Rescale_Year <- c(Rescale_Year, dOver[,1])
Rescale_Alleles <- c(Rescale_Alleles, dOver[,i])
}
smoothScatter(Rescale_Year, Rescale_Alleles, colramp = Pal, nbin=100)
Rescale_Year <- c()
Rescale_Alleles <- c()
for (i in 3:ncol(dOver)){
Rescale_Year <- c(Rescale_Year, dOver[,1])
Rescale_Alleles <- c(Rescale_Alleles, overallFreq[,i] - overallFreq[1,i])
}
#plot probability of a given change in frequency(y)by the year(x).(same as above plot but color coded probability density instead transparent see-through lines)
smoothScatter(Rescale_Year, Rescale_Alleles, colramp = Pal, nbin=100)
length(Rescale_Alleles)
length(Rescale_Year)
overallFreq[1:5,1:5]
Rescale_Year <- c()
Rescale_Alleles <- c()
for (i in 3:ncol(dOver)){
Rescale_Year <- c(Rescale_Year, overallFreq[,1])
Vec <- overallFreq[,i]
Init <- overallFreq[]
Rescale_Alleles <- c(Rescale_Alleles, overallFreq[,i] - overallFreq[1,i])
}
smoothScatter(Rescale_Year, Rescale_Alleles, colramp = Pal, nbin=100)
smoothScatter(Rescale_Year, Rescale_Alleles, colramp = Pal, nbin=100)
addFit(nruns = 10, n = 100, ngens = 18, startT = 1997, simCol = "gray40", rescale = TRUE)
plot(alleleFreqs$d_freq, alleleFreqs$d_imm, xlim=c(-0.15, 0.15), xlab="overall freq. change", ylab="freq. change", ylab="freq. change in subset")
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
#d_(change of freq.)& n_(number of individuals) to determine the relative strength of the different evolutionary forces here.
#below is one example of how they can be examined:
plot(alleleFreqs$d_freq, alleleFreqs$d_imm)
points(alleleFreqs$d_freq, alleleFreqs$d_birth, col='blue')
points(alleleFreqs$d_freq, alleleFreqs$d_surv, col='red')
smoothScatter(Rescale_Year, Rescale_Alleles, colramp = Pal, nbin=100)
#each allele's rescaled freq.(observed-initial freq.)over time.
rescaleFreq <- apply(overallFreq[,3:ncol(overallFreq)], 2, function(x)x- x[1])
plot(1, 1, type="n", xlim=c(1998, 2013), ylim=c(-0.25, 0.25))
s <- apply(rescaleFreq, 2, function(x) lines(overallFreq[,1], x, col=rgb(0,0,0,0.01)))
smoothScatter(Rescale_Year, Rescale_Alleles, colramp = Pal, nbin=100)
addFit(nruns = 10, n = 100, h=1, s= 0, ngens = 18, startT = 1997, simCol = "gray40", rescale = TRUE)
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
boxplot(Sample1, Sample2)
#Yes they are different, population 1 is larger than population 2.(TrueMeans)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
Alan <- makeBaby(PatGrandma, PatGrandpa)
#Examine objects using head() and nrow() functions.
nrow(PatGrandma)
nrow(MatGrandma)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
#What should the # be?
#Half, since we recieve 23 chromsomes from mom and then another 23 from dad. Brendas 23 chromsomes should have many genes encoded that occupy approximately 20,000 loci positions.
#Varies by relationship
ToMom <- length( grep("mom", Focus))/ length( Focus)
#what should these numbers be? Do they match your expectations?
#Maternal Grandparents should share about 25% each of 23 pair set from the mother. Roughly 11 or 12 chromsomes that could have approximately 9,000-10,000 loci, but varies by relatdness.
ToMom
#
ToMomMom <- length( grep( "grandma_mom", Focus))/ length( Focus)
ToMomDad <- length( grep( "grandpa_mom", Focus))/ length( Focus)
#Is focus related to each maternal granparent? paternal grandparent? Is this what you would expect? What is the average relatdness of Focus to all 4 grandparents?
#yes,yes. I would expect Focus to have half of each chromsomes from each parent that contain DNA of each grandparent at about 25% for half recieved by the mother and then by the father.
#50% of all 46 chromsomes will be inherited from maternal and parternal grandparents but 25% totsl relatdness compared to parents on an overall scale.
Sibling_01 <- makeBaby(Brenda, Alan)
#How much DNA do you expect Focus to share with Sibling_01?
#Half of there DNA if normal siblings,so at least 10,000 genes in normal situations.
#Is that the amount actually shared?
#No actually about 1/4 to 2/4 of DNA is shared depending on if they are full siblings at 50% and half at 25%. Not considering other factors.
ToSib <- length(intersect( Focus, Sibling_01))/length( Focus )
#How many genes does Focus share with each of the 1,000 siblings?
#Still 1/4, no matter how many children they have.
ManySiblings <- replicate(1e3, length( intersect( Focus, makeBaby(Brenda, Alan)))/ length( Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(density( ManySiblings), main="", xlab="proportion shared genes")
#Please provide an explanation for why you see a range of values?
#On the x axis is the proportion of genes shared and the y axis is the density of those genes. Theres is a range of values because at 0.5 percent that is the seperation between the genes shared
#by mom and dad. As you travel down in density or the hill the the porpotion of genes shared goes to grandparents, siblings,great grandparents and half siblings. That is what is expected because no the exact same genes will be passes by many sibling sometimes it will
#be the other half of genes that wasn't shared.
#Hardy-Weinberg Equilibrium
HWE<- function(p) {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0, 1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
#Can you read and understand this plot?
#Frequency of the allele a is at the x axis, and the genotype frequency is y. The frency of the a allele increases as individuals will become more heterzgous even though time is not plotted here.
#What happends to the freq. of aa individuals as the frequency of the a allele increases in the population?
#aa individuals are increased and there is more homozygous indivduals.
#What happens to the aa frequency as a decreases?
#When a decreseases there are more heterzgotes Aa and less aa in the population.aa decreases.
#Is time shown of the plot?
#no, but the frequency of these alleles popping up in HWE is the way we can predict population outcomes.
#geographic space?
#no, location is not a factor here.
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"bb"], lwd=2, col="blue")
legend("top", legend=c("aa","ab","bb"), col=c("red","purple","blue"), lty=1, lwd=2, bty="n")
Ne <- 500
Pop <- simPop(Ne)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/Ne, pch=21, bg="red")
#Does the frequency of the aa genotype in your population match the expectation from Hardy-Weinberg?
#yes there will be more homozygous individuals as population size is larger at 500.
Pop <- simPop(50)
points(Pop[,"freqa"], Pop[,"Genotypes.aa"]/50, pch=22, bg="red")
#What changed and why?
#The population size smaller at 50  has more homozygotes below the half way mark because of HWE expectation.More Homozygous to more heterzygous to little to no a frequency.
#Two-Allele Drift
install.packages("learnPopGen")
library(learnPopGen)
x <- genetic.drift(Ne=200, nrep=5, pause=0.001)
#Run over again watching lines? Note pattern change Ne
#If you change the population to 20 people there is more variation in the probability of a population to go extinct or fixation. The more individuals at 200 the more stable the population are and less variability of the allele A.
x <- genetic.drift(Ne=20, nrep=5, pause=0.01)
x <- genetic.drift(Ne=500, nrep=5, pause=0.01)
PopSizes <- 5:50
Samples <- rep(PopSizes, 5)
tExt <- sapply(Samples, function(x) nrow(simPop(x, 500)))
Line <- lm(tExt ~ Samples)
summary(Line)
Line$coef
plot(Samples, tExt)
abline(Line)
#You may consider running  Line2 <- Im( tExt~Samples + 0) which one makes more sense, what does +0 do?
Line2 <- lm( tExt~Samples + 0)
# I think it changes the y and x axis to every single individual in a population as a dot and does not seperate the population in each line.
#What do you notice looking at the graph about the distance between the points and the line as the population size increases? What does that mean to you?
#As the population size increases there is more fluxation of the A allele more fixation and extinction possibilities. That the A allele has changed or evolved.
#Hardy-Weinberg Equilibrium
HWE<- function(p) {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0, 1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
trueMean1 <- 5
trueSD1 <- 5
population1 <- rnorm(1e6, trueMean1, trueSD1)
trueMean2 <- 4
trueSD2 <- 5
population2 <- rnorm(1e6, trueMean2, trueSD2)
Size <- 50
Sample1 <- sample(population1, Size)
Sample2 <- sample(population2, Size)
boxplot(Sample1, Sample2)
#Yes they are different, population 1 is larger than population 2.(TrueMeans)
source("http://jonsmitchell.com/code/simFxn04.R")
MatGrandma <- makeFounder("grandma_mom")
MatGrandpa <- makeFounder("grandpa_mom")
PatGrandma <- makeFounder("grandma_da")
PatGrandpa <- makeFounder("grandpa_da")
Alan <- makeBaby(PatGrandma, PatGrandpa)
#Examine objects using head() and nrow() functions.
nrow(PatGrandma)
nrow(MatGrandma)
Brenda <- makeBaby(MatGrandma, MatGrandpa)
Focus <- makeBaby(Brenda, Alan)
#What should the # be?
#Half, since we recieve 23 chromsomes from mom and then another 23 from dad. Brendas 23 chromsomes should have many genes encoded that occupy approximately 20,000 loci positions.
#Varies by relationship
ToMom <- length( grep("mom", Focus))/ length( Focus)
#what should these numbers be? Do they match your expectations?
#Maternal Grandparents should share about 25% each of 23 pair set from the mother. Roughly 11 or 12 chromsomes that could have approximately 9,000-10,000 loci, but varies by relatdness.
ToMom
#
ToMomMom <- length( grep( "grandma_mom", Focus))/ length( Focus)
ToMomDad <- length( grep( "grandpa_mom", Focus))/ length( Focus)
#Is focus related to each maternal granparent? paternal grandparent? Is this what you would expect? What is the average relatdness of Focus to all 4 grandparents?
#yes,yes. I would expect Focus to have half of each chromsomes from each parent that contain DNA of each grandparent at about 25% for half recieved by the mother and then by the father.
#50% of all 46 chromsomes will be inherited from maternal and parternal grandparents but 25% totsl relatdness compared to parents on an overall scale.
Sibling_01 <- makeBaby(Brenda, Alan)
#How much DNA do you expect Focus to share with Sibling_01?
#Half of there DNA if normal siblings,so at least 10,000 genes in normal situations.
#Is that the amount actually shared?
#No actually about 1/4 to 2/4 of DNA is shared depending on if they are full siblings at 50% and half at 25%. Not considering other factors.
ToSib <- length(intersect( Focus, Sibling_01))/length( Focus )
#How many genes does Focus share with each of the 1,000 siblings?
#Still 1/4, no matter how many children they have.
ManySiblings <- replicate(1e3, length( intersect( Focus, makeBaby(Brenda, Alan)))/ length( Focus))
quantile(ManySiblings)
mean(ManySiblings)
plot(density( ManySiblings), main="", xlab="proportion shared genes")
#Please provide an explanation for why you see a range of values?
#On the x axis is the proportion of genes shared and the y axis is the density of those genes. Theres is a range of values because at 0.5 percent that is the seperation between the genes shared
#by mom and dad. As you travel down in density or the hill the the porpotion of genes shared goes to grandparents, siblings,great grandparents and half siblings. That is what is expected because no the exact same genes will be passes by many sibling sometimes it will
#be the other half of genes that wasn't shared.
#Hardy-Weinberg Equilibrium
HWE<- function(p) {
aa <- p^2
ab <- 2 * p * (1-p)
bb <- (1-p)^2
return(c(aa=aa, ab=ab, bb=bb))
}
HWE(0.5)
plot(1, 1, type="n", xlim=c(0,1), ylim=c(0, 1), xlab="freq. allele a", ylab="geno. freq")
p <- seq(from = 0, to = 1, by = 0.01)
GenoFreq <- t(sapply(p, HWE))
lines(p, GenoFreq[,"aa"], lwd=2, col="red")
lines(p, GenoFreq[,"ab"], lwd=2, col="purple")
lines(p, GenoFreq[,"bb"], lwd=2, col="blue")
legend("top", legend=c("aa","ab","bb"), col=c("red","purple","blue"), lty=1, lwd=2, bty="n")
simPop()
#Look at how effective selection is when the allele is recessive versus overdominant, look at how drift and selection interact.
#recessive alleles evolve quickly, dominant evolve slowly. Drift is random chance evolution and selection is more about fitness evolution.
#Does the most fit allele go to fixation?
#no
#What combinations of drift and heritability prevent that?
#drift leads to fixation but heritability increase homozygotes but in heritability homozygotes are reproductively diadvantaged and heterzygous is around producing more variance.
#Explore these above
source("http://jonsmitchell.com/code/fxn05.R")
Pop1 <- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h = 1, s = 0)
plot(1: nrow(Pop1), Pop1[,1], ylim =c(0, 1), type = "l", xlab="generation", ylab ="allele freq.", lwd=2)
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')
legend("topleft", legend = c ("a", "b"), col = c("black", "red"), lwd=2, bty="n")
plotFit( nruns = 10, n = 50, ngens = 100, init_p = 0.5, h = 1, s = 0)
#Scientific testing
Expectation <- c(10, 10, 10, 10)
Observed <- c(15, 15, 5, 5)
Chisq <- sum((( Expectation - Observed)^ 2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Expectation <- c(10, 10, 10, 10)
Observed <- c(2,3, 10, 30)
Chisq <- sum((( Expectation - Observed)^ 2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Expectation <- c(10, 10, 10, 10)
Observed <- c(5, 0, 0, 35)
Chisq <- sum((( Expectation - Observed)^ 2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Expectation <- c(10, 10, 10, 10)
Observed <- c(3, 4, 7, 32)
Chisq <- sum((( Expectation - Observed)^ 2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Expectation <- c(10, 10, 10, 10)
Observed <- c(10, 10, 10, 10)
Chisq <- sum((( Expectation - Observed)^ 2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
Expectation <- c(10, 10, 10, 10)
Observed <- c(40, 40, 40, 40)
Chisq <- sum((( Expectation - Observed)^ 2)/ Expectation)
barplot(rbind(Expectation, Observed), beside = T, main = bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))
#Try setting the observed vector to c(5, 0, 0, 35) and (2,3, 10, 30) and other combinations you can think of.
#What is the X^2 value when you observe all 10's?
#0
#What about when all 40 are only in one category?
#360
#How does the x^2 relate to the evenness of the bars?
#x^2 is the sum of contributions its the difference between the two,from the expected. Relates the proportion of a observational proabability of the 2 values, Whether the observed is stastical significant. The x^2 relates too the number in a category observed or expected. Each bar is x and the other is x. The bars proportion that the expectation can have from observed.
setwd("C:\\Users\\kas0070\\Desktop\\evolution\\tasks\\task_05")
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
#Lokk at this data ,remind yourself by looking at Task02a.
counts <- results[,c("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
#This line calculates chi-squared for the first row of counts
calcChi(counts[1,])
#This line calculates chi-squared for all the rows at once.
Chisqs <- apply(counts, 1, calcChi)
#Use the following function multiple times
plotChis(counts)
#Look at plots, look at the chisqaure value for each panel, and the heights of the bars.
#How "even" are the bars when the chi squared is high?
#When compared to the 10 mark the groups are not even at all as one group or color is extremely high and the other are not.
#How "even" are they when it is low?
#exactly even in regards to 10 mark.
#What does plotChis() show you about how to interpret the number a Chi-sqaured test spits out?
#It tells you that it doesnt matter the group it could be any one of the groupsor colors that is contributing to this model for each chisquare. Looking at each group individually.
#What's the average chi_sqaured?
#10
#How would you interpret thta given (many) plots you should've just looked at?
#The same y axis expected is the same value of 60. The eveness relates to the 10 or average.
#How does the average chi-squared compare to the critical value in the packet (11.70)?
#You have different degrees of freedom like 1, if the value is above that one degree of freedom you reject the null hypothesis. There is a significant difference.
#Does the chi-squared differ by background?
#no
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
#Critical value is 11.70 that is if the Chi-squared number is greater than 11.70, p-value is <0.05. The difference is stastically clear.
propSig <- length( which( Chisqs > 11.70))/ length(Chisqs)
percSig <- round(100 * propSig)
#percSig tells you the percent of trails that had a significant p-value.
percSig
#Does that # suprise you?
#yes it is higher than expected.
#Do you think the only thing driving that very high number is natural selection?
#no
#Plot Chi-squared results
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
#Set up empty plot to put data into
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at=1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
#Add Histogram of the data
counter <- 1
for(i in backgrounds) {
Data <- Chisqs[which(results[,3] == i)]
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])
counter <- counter + 1
}
#Add a line reprsenting the critical value
abline( v= 11.70, lty=2, lwd = 2, col='black')
#The more to the right of that line a distrubution is, the more often trials on that background were"significant"
#Do you see any meaningful differences between backgrounds?
#yes, The variability in the size of standard dev. for each the bell shaped curve versus the critical value.
#simDraws=blind toothpick experiment random
#Running the experiment without natural selection 10,000 times.
Simulation <- simDraws(10000)
#Add those ten thousand Chi-squared simulations to a plot
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v = 11.70, lty=2, lwd=2)
#What % of the time does the selection-free simulation find a "significant" (greater than 11.70) result?
#less than the others, I would say roughly 50%.
#How can the selction-free simulation produce final counts so different from the intial counts?
# Natural selection is not driving color change or difference its not influencinf fixation or extinction.
#Fit values are 1 for each toothpick colors
Fit <- c(1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation2 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation2, Color=rgb(0,0,0,0.25))
#1 tooth pick type selected against
Fit <- c(0.1, 1, 1, 1, 1, 1)
names(Fit) <- 1:6
Simulation3 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
#3 toothpick types selected against
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit) <- 1:6
Simulation4 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))
#5 selected against
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation5 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))
#insane selection
Fit <- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)
names(Fit) <- 1:6
Simulation6 <- simDraws(1e4, w = Fit)
addHist(Y=8, Dat=Simulation6, Colo=rgb(0,0,0,0.25))
mtext(side=2, at=8, line=0, "sel.sim.")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
#How does the mixture compare to the student generated data?
#The mixture levels out the two extremes the ones that look like they have selection and the ones that look like they have high selection making a more fit simulation of how it actually is. The students that picked the right ones on purpose and the students that picked randomely.
#Do most student groups show evidece of strong selection?
#No
#If you had to describe the relative strength of different evolutionary processes across all the groups in all the labs across all of the years, what would you say?
#both selection and drift are occur at the same time and effect significance at the same time. Each are equally as strong, varying randomly yearly.
#Inference
#What evolutionary processes are at work in the lab as done by humans?
#mutation(not as much), natural selection, genetic drift, and gene flow the colors. prinarily natural selection and genetic drift.
#What evolutionary processes are at work in the lab-as-simulated-by-the-computer?
##mutation, natural selection, genetic drift, and gene flow.
#What do the graphs tell us about the relative strength of the evolutionary processes the Bio-112 students are stimulating?
#It is not not as strong as a more random process.
#What tells you more about what processes occuring here: comparing the student numbers to a single critical value (11.70), or comparing the student numbers to the stimulated numbers?
#comparing the student numbers to the stimulated numbers
#What would that do to the x^2 values?
# Increase the x^2
© 2020 GitHub, Inc.
Terms
Privacy
Security
Status
Help
Contact GitHub
Pricing
API
Training
Blog
About
